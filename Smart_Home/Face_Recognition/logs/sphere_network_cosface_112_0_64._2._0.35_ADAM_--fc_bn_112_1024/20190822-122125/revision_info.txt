arguments: train/train_multi_gpu.py --logs_base_dir logs/sphere_network_cosface_112_0_64._2._0.35_ADAM_--fc_bn_112_1024/ --models_base_dir models/sphere_network_cosface_112_0_64._2._0.35_ADAM_--fc_bn_112_1024/ --data_dir dataset/casia-112x112 --list_file dataset/cleaned_list.txt --model_def models.inception_resnet_v1 --optimizer ADAM --learning_rate -1 --max_nrof_epochs 100 --random_flip --learning_rate_schedule_file lr_coco.txt --num_gpus 1 --weight_decay 1e-4 --loss_type cosface --scale 64. --weight 2. --alpha 0.35 --network sphere_network --fc_bn --image_height 112 --image_width 112 --embedding_size 1024
--------------------
git hash: b'4a1857ec586fe9ddb6175165330b1ae7a9b9a79a'
--------------------
b"diff --git a/lib/utils.py b/lib/utils.py\nindex 0e4d7ac..fe7ddd4 100644\n--- a/lib/utils.py\n+++ b/lib/utils.py\n@@ -583,8 +583,9 @@ def dataset_from_list(data_dir,list_file):\n     count = 1\n     class_paths = {}\n     for line in lines:\n+        print(line)\n         image_path, _ = line.split(' ')\n-        class_name, _ = image_path.split('/')\n+        class_name, _ = image_path.split('\\\\')\n         if class_name not in class_paths:\n             class_paths[class_name] = []\n         full_image_path = os.path.join(path_exp,image_path)\n@@ -802,5 +803,5 @@ def put_images_on_grid(images, shape=(16,8)):\n \n def write_arguments_to_file(args, filename):\n     with open(filename, 'w') as f:\n-        for key, value in vars(args).iteritems():\n+        for key, value in vars(args).items():\n             f.write('%s: %s\\n' % (key, str(value)))"